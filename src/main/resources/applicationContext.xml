<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	  http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-4.3.xsd
	  http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--spring容器: 提供创建管理对象-->

	<!--2. 在spring配置文件中使用PropertyPlaceholderConfigurer类加载属性文件-->
	<bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!--3.	在spring配置使用${属性文件中的键}引用属性文件中的值-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driverClass}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>
	<!--2.定义sqlSesession工厂-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--引用数据源-->
		<property name="dataSource" ref="dataSource"></property>
		<!--读取mybatis的配置文件-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<!--3、spring接管dao层组件-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--指定SQLSession工厂对象-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!--扫描dao层接口，动态生成实现类的对象-->
		<property name="basePackage" value="com.team.dao"></property>
	</bean>

	<!--配置Spring的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 注解方式配置事物 -->
	<!--注意:以后业务中的方法想基于事务执行使用@Transactional注解标注即可-->
	<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

	<context:component-scan base-package="com.team.service"></context:component-scan>
</beans>

